=== command
SEMGREP_APP_TOKEN="fake_key" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --json
=== end of command

=== exit code
7
=== end of exit code

=== stdout - plain
{
  "errors": [
    {
      "code": 2,
      "level": "error",
      "message": "Failed to download config from https://semgrep.dev/api/agent/scans/<MagicMock\nname='post().json().__getitem__().__getitem__()' id='139758949745376'>/rules.yaml: [Errno 2] No such file or directory:\n'/home/runner/work/semgrep/semgrep/cli/src/semgrep/semgrep_interfaces/rule_schema.yaml'",
      "type": "SemgrepError"
    },
    {
      "code": 7,
      "level": "error",
      "message": "invalid configuration file found (1 configs were invalid)",
      "type": "SemgrepError"
    }
  ],
  "paths": {
    "_comment": "<add --verbose for a list of skipped paths>",
    "scanned": []
  },
  "results": [],
  "version": "0.42"
}
=== end of stdout - plain

=== stderr - plain
Scan environment:
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment git, triggering event is unknown
  semgrep.dev - authenticated as org_name

Fetching configuration from semgrep.dev
Adding ignore patterns configured on semgrep.dev as `--exclude` options: ()
Fetching rules from https://semgrep.dev/registry.

=== end of stderr - plain