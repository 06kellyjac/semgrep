METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

Fetching rules from https://semgrep.dev/registry.
Additional properties are not allowed ('pattern-new-feature' was unexpected)

Failed validating 'additionalProperties' in schema['properties']['rules']['items']:
    ordereddict([('type', 'object'), ('properties', ordereddict([('id', ordereddict([('title', 'Rule ID to attach to findings'), ('type', 'string')])), ('version', ordereddict([('title', 'Version of rule'), ('type', 'string')])), ('message', ordereddict([('title', 'Description to attach to findings'), ('type', 'string')])), ('mode', ordereddict([('default', 'search'), ('enum', ['search', 'taint', 'join', 'extract'])])), ('languages', ordereddict([('title', 'Languages this pattern should run on'), ('type', 'array'), ('items', ordereddict([('type', 'string')]))])), ('paths', ordereddict([('title', 'Path globs this pattern should run on'), ('type', 'object'), ('properties', ordereddict([('include', ordereddict([('$ref', '#/$defs/path-array')])), ('exclude', ordereddict([('$ref', '#/$defs/path-array')]))])), ('additionalProperties', False)])), ('severity', ordereddict([('title', 'Severity to report alongside this finding'), ('enum', ['ERROR', 'WARNING', 'INFO', 'INVENTORY'])])), ('pattern-sinks', ordereddict([('$ref', '#/$defs/taint-content')])), ('pattern-sources', ordereddict([('$ref', '#/$defs/taint-content')])), ('pattern-propagators', ordereddict([('$ref', '#/$defs/taint-content')])), ('pattern-sanitizers', ordereddict([('$ref', '#/$defs/taint-content')])), ('join', ordereddict([('$ref', '#/$defs/join-content')])), ('fix', ordereddict([('title', 'Replacement text to fix matched code. Can use matched metavariables.'), ('type', 'string')])), ('fix-regex', ordereddict([('type', 'object'), ('title', 'Replacement regex to fix matched code.'), ('properties', ordereddict([('count', ordereddict([('title', 'Replace up to this many regex matches'), ('type', 'integer')])), ('regex', ordereddict([('title', 'Regular expression to find in matched code'), ('type', 'string')])), ('replacement', ordereddict([('title', 'Code to replace the regular expression match with. Can use capture groups.'), ('type', 'string')]))])), ('required', ['regex', 'replacement']), ('additionalProperties', False)])), ('metadata', ordereddict([('title', 'Arbitrary structured data for your own reference'), ('type', 'object')])), ('options', ordereddict([('title', 'Options object to enable/disable certain matching features in semgrep-core'), ('type', 'object')])), ('pattern', ordereddict([('title', 'Return finding where Semgrep pattern matches exactly'), ('type', 'string')])), ('pattern-regex', ordereddict([('title', 'Return finding where regular expression matches exactly'), ('type', 'string')])), ('patterns', ordereddict([('$ref', '#/$defs/patterns-content')])), ('pattern-either', ordereddict([('$ref', '#/$defs/pattern-either-content')])), ('r2c-internal-project-depends-on', ordereddict([('$ref', '#/$defs/r2c-internal-project-depends-on-content')])), ('extract', ordereddict([('title', 'Metavariable whose content to use as the extracted result for subsequent rules'), ('type', 'string')])), ('dest-language', ordereddict([('title', 'Language to process the extracted result of this rule as'), ('type', 'string')]))])), ('additionalProperties', False), ('allOf', [ordereddict([('if', ordereddict([('properties', ordereddict([('mode', ordereddict([('const', 'extract')]))])), ('required', ['mode'])])), ('then', ordereddict([('required', ['id', 'languages', 'dest-language', 'extract']), ('oneOf', [ordereddict([('required', ['pattern'])]), ordereddict([('required', ['patterns'])]), ordereddict([('required', ['pattern-either'])]), ordereddict([('required', ['pattern-regex'])])]), ('properties', ordereddict([('message', False), ('severity', False), ('pattern-sinks', False), ('pattern-sources', False), ('pattern-propagators', False), ('pattern-sanitizers', False), ('join', False)]))]))]), ordereddict([('if', ordereddict([('properties', ordereddict([('mode', ordereddict([('const', 'taint')]))])), ('required', ['mode'])])), ('then', ordereddict([('required', ['id', 'message', 'languages', 'severity', 'pattern-sinks', 'pattern-sources']), ('properties', ordereddict([('extract', False), ('dest-language', False), ('pattern', False), ('patterns', False), ('pattern-either', False), ('pattern-regex', False), ('join', False)]))]))]), ordereddict([('if', ordereddict([('properties', ordereddict([('mode', ordereddict([('const', 'join')]))])), ('required', ['mode'])])), ('then', ordereddict([('required', ['id', 'message', 'severity', 'join']), ('properties', ordereddict([('extract', False), ('dest-language', False), ('patterns', False), ('pattern', False), ('pattern-either', False), ('pattern-regex', False), ('pattern-sinks', False), ('pattern-sources', False), ('pattern-propagators', False), ('pattern-sanitizers', False)]))]))]), ordereddict([('if', ordereddict([('properties', ordereddict([('mode', ordereddict([('const', 'search')]))]))])), ('then', ordereddict([('required', ['id', 'message', 'languages', 'severity']), ('oneOf', [ordereddict([('required', ['pattern'])]), ordereddict([('required', ['patterns'])]), ordereddict([('required', ['pattern-either'])]), ordereddict([('required', ['pattern-regex'])]), ordereddict([('required', ['r2c-internal-project-depends-on'])])]), ('properties', ordereddict([('extract', False), ('dest-language', False), ('pattern-sinks', False), ('pattern-sources', False), ('pattern-propagators', False), ('pattern-sanitizers', False), ('join', False)]))]))])])])

On instance['rules'][0]:
    {'id': 'eqeq-bad',
     'languages': ['python'],
     'message': 'useless comparison',
     'pattern-new-feature': '$X == $X',
     'severity': 'ERROR'}

Rules downloaded from https://semgrep.dev/p/ci failed to parse.
This is likely because rules have been added that use functionality introduced in later versions of semgrep.
Please upgrade to latest version of semgrep (see https://semgrep.dev/docs/upgrading/) and try again.

semgrep error: Invalid rule schema
  --> https://semgrep.dev/...:2
2 | - id: eqeq-bad
3 |   pattern-new-feature: $X == $X
4 |   message: "useless comparison"
5 |   languages: [python]
6 |   severity: ERROR

Additional properties are not allowed ('pattern-new-feature' was unexpected)

[ERROR] invalid configuration file found (1 configs were invalid)
