{
  "errors": [],
  "paths": {
    "_comment": "<add --verbose for a list of skipped paths>",
    "scanned": [
      "targets/basic/inside.py",
      "targets/basic/metavariable-comparison-bad-content.py",
      "targets/basic/metavariable-comparison-base.py",
      "targets/basic/metavariable-comparison-strip.py",
      "targets/basic/metavariable-comparison.py",
      "targets/basic/metavariable-regex-multi-regex.py",
      "targets/basic/metavariable-regex-multi-rule.py",
      "targets/basic/metavariable-regex.py",
      "targets/basic/nosem.py",
      "targets/basic/regex.py",
      "targets/basic/stupid.py"
    ]
  },
  "results": [
    {
      "check_id": "rules.metavar-test-multi-rule",
      "end": {
        "col": 37,
        "line": 3,
        "offset": 81
      },
      "extra": {
        "fingerprint": "e80eb9a939d1daeee7027359b7c0e1c7b03b3a9fa03473bea3e247e8e803e49872e2114a79c89b2354214f2e21fca9110ce6ca4ec013fc84ecd8efe8442c7ec2_0",
        "is_ignored": false,
        "lines": "    metavariable_regex_test.method()",
        "message": "Metavariable regex test multi rule",
        "metadata": {},
        "metavars": {
          "$X": {
            "abstract_content": "method",
            "end": {
              "col": 35,
              "line": 3,
              "offset": 79
            },
            "start": {
              "col": 29,
              "line": 3,
              "offset": 73
            },
            "unique_id": {
              "md5sum": "<masked in tests>",
              "type": "AST"
            }
          }
        },
        "severity": "ERROR"
      },
      "path": "targets/basic/metavariable-regex-multi-rule.py",
      "start": {
        "col": 5,
        "line": 3,
        "offset": 49
      }
    }
  ],
  "version": "0.42"
}